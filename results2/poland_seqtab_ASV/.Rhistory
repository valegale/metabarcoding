res_woc <- results(dds_woc)
plotCounts(dds_woc, gene=1039, intgroup = "type")
plotCounts(dds_cor, gene=1039, intgroup = "type")
plotCounts(dds_woc, gene=1039, intgroup = "type")
plotCounts(dds_woc, gene=1163, intgroup = "type")
plotCounts(dds_cor, gene=1163, intgroup = "type")
plotCounts(dds_cor, gene=10001, intgroup = "type")
plotCounts(dds_woc, gene=10001, intgroup = "type")
plotCounts(dds_woc, gene=10001, intgroup = "type")
plotCounts(dds_cor, gene=10001, intgroup = "type")
gene=which.min(25587)
plotCounts(dds_woc, gene=10001, intgroup = "type")
plotCounts(dds_cor, gene=10001, intgroup = "type")
plotCounts(dds_cor, gene=20826, intgroup = "type")
plotCounts(dds_woc, gene=20826, intgroup = "type")
plotCounts(dds_cor, gene=20826, intgroup = "type")
setdiff(diff_not_cor, diff_cor)
plotCounts(dds_cor, gene=20826, intgroup = "type")
plotCounts(dds_woc, gene=20826, intgroup = "type")
plotCounts(dds_cor, gene=20826, intgroup = "type")
plotCounts(dds_woc, gene=20825, intgroup = "type")
plotCounts(dds_cor, gene=20825, intgroup = "type")
plotCounts(dds_woc, gene=20824, intgroup = "type")
plotCounts(dds_cor, gene=20824, intgroup = "type")
plotCounts(dds_cor, gene=20826, intgroup = "type")
plotCounts(dds_woc, gene=1163, intgroup = "type")
plotCounts(dds_cor, gene=1163, intgroup = "type")
plotCounts(dds_woc, gene=5992, intgroup = "type")
plotCounts(dds_cor, gene=5992, intgroup = "type")
plotCounts(dds_cor, gene=1570, intgroup = "type")
plotCounts(dds_woc, gene=1570, intgroup = "type")
plotCounts(dds_cor, gene=1570, intgroup = "type")
plotCounts(dds_cor, gene=8756, intgroup = "type")
plotCounts(dds_woc, gene=8756, intgroup = "type")
plotCounts(dds_cor, gene=8756, intgroup = "type")
library(ggplot2)
df <- data.frame(dose=c("D0.5", "D1", "D2"),
len=c(4.2, 10, 29.5))
ggplot(data=df, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point()
df <- data.frame(dose=c(22.30, 23, 24),
len=c(4.2, 10, 29.5))
ggplot(data=df, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point()
ggplot(data=df, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point() +  xlab("1", "2", "3")
N
df <- data.frame(dose=c(1, 1.5, 3),
len=c(4.2, 10, 29.5))
time <- c("22.30", "23", "00")
ggplot(data=df, aes(x=dose, y=len, group=1)) +
geom_line()+
geom_point() +  scale_x_discrete(labels= time)
knitr::opts_chunk$set(echo = TRUE)
STEPA_pF <- read.csv(file="Merged_phyloFlash2.csv", header=TRUE, row.names = 1)
View(STEPA_pF)
STEPA_pF_2 <- tidyr::separate(STEPA_pF, taxa, into = paste0("TAXLEVEL", 1:20), sep = ';')
View(STEPA_pF_2)
library(dada2); packageVersion("dada2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dada2", version = "3.11")
R.version
install.packages(c("dplyr", "tidyr"))
readRDS(seqtab.nochim, "seqtab.nochim.RDS")
readRDS("seqtab.nochim.RDS", seqtab.nochim)
library(dada2); packageVersion("dada2")
readRDS("C:/Users/valen/OneDrive/Desktop/Umweltmetagenomics/seqtab.nochim.RDS", seqtab.nochim)
r.version
R.version
library(dada2); packageVersion("dada2")
path <- "C:/Users/valen/OneDrive/Desktop/Umweltmetagenomics/Seq_Read_files"
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_R2_001.fastq", full.names = TRUE))
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
sample.names
plotQualityProfile(fnFs[1:12])
fnFs
path <- "C:/Users/valen/OneDrive/Desktop/Umweltmetagenomics/"
file_name <- "seqtab_nonchim_id.csv"
path <- "C:/Users/valen/OneDrive/Desktop/Umweltmetagenomics/"
csv_table <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
csv_table <- read.csv(file=paste(path, file_name, sep = ""), header=TRUE, row.names = 1)
View(csv_table)
View(csv_table)
library(dplyr)
data_taxon <- csv_table %>% group_by("Order")
View(data_taxon)
data_taxon <- csv_table %>% group_by(Order)
csv_table.names
csv_table.names()
csv_table.colnames
csv_table.colnames()
colnames(csv_table)
data_taxon <- csv_table %>% group_by(Order)
data_taxon <- csv_table %>% group_by(Order) %>%
summarise(across(where(is.numeric), sum))
View(data_taxon)
data_taxon[1,]
data_taxon[,1]
data_taxon[1,]
ecco <- data_taxon[1,]
View(ecco)
ecco
sum(ecco)
ecco <- data_taxon[1,1]
ecco <- data_taxon[,c(1)]
View(ecco)
ecco <- data_taxon[,c(-1)]
View(data_taxon)
View(ecco)
ecco <- ecco[,c(-1)]
ecco <- ecco[,c(-1)]
ecco <- data_taxon[1,]
ecco <- ecco[,c(-1)]
View(ecco)
sum(ecco)
View(data_taxon)
data_order <- csv_table %>% group_by(Order) %>%
summarise(across(where(is.numeric), sum))
View(data_order)
View(data_order)
View(data_order)
colnames <- data_order$order
colnames <- data_order$Order
data_order[1:]
df_order <- t(data_order[c(-1),])
View(df_order)
df_order <- t(data_order[,c(-1)])
View(df_order)
df_order <- data_order[,c(-1)]
View(df_order)
data_order <- csv_table %>% group_by(Order) %>%
summarise(across(where(is.numeric), sum))
colnames <- data_order$Order
df_order <- data_order[,c(-1)]
df_order <- t(data_order[,c(-1)])
View(df_order)
View(df_order)
colnames(df_order) <- colnames
View(df_order)
View(data_taxon)
order <- c(1:177)
df1 <- melt(data_order,"Order")
library(reshape2)
df1 <- melt(data_order,"Order")
View(df1)
data_order_order <- data.frame(data_order, "ordering" = order)
View(data_order)
View(df1)
View(df_order)
View(df_order)
View(data_taxon)
setwd(path_result)
library(reshape2)
library(ggplot2)
library(gridExtra)
#insert here the path to the results folder
# ex. path = "C:/.../results"
path <- "C:/metabarcoding/results/"
results_dir <- "seqtab_nonchim_id_ASV/"
path_result <- paste(path, results_dir, sep = "")
setwd(path_result)
path_plots <- paste(path, "plots/", results_dir, sep = "")
dir.create(path_plots)
file_list <- list.files()
ggplot_list <- list()
i = 1
for (file_name in file_list){
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- paste( "species", 1:n_row)
r_n <- file_csv[,1]
df1 <- data.frame(file_csv[,2:n_col],
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
ggplot_list[[i]] = g
i <- i +1
name_file <- paste(path_plots, tools::file_path_sans_ext(file_name), ".png", sep = "")
ggsave(name_file, width = 8, height = 4.5, dpi=500)
#for points <- geom_point(aes(color=row_names))
}
#insert here the path to the results folder
# ex. path = "C:/.../results"
path <- "C:/metabarcoding/results/"
results_dir <- "poland_seqtab_ASV/"
path_result <- paste(path, results_dir, sep = "")
setwd(path_result)
path_plots <- paste(path, "plots/", results_dir, sep = "")
dir.create(path_plots)
file_list <- list.files()
ggplot_list <- list()
i = 1
for (file_name in file_list){
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- paste( "species", 1:n_row)
r_n <- file_csv[,1]
df1 <- data.frame(file_csv[,2:n_col],
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
ggplot_list[[i]] = g
i <- i +1
name_file <- paste(path_plots, tools::file_path_sans_ext(file_name), ".png", sep = "")
ggsave(name_file, width = 8, height = 4.5, dpi=500)
#for points <- geom_point(aes(color=row_names))
}
#insert here the file with the species you are interested in, example:
# file_name = "Aulacoseira_granulata.csv"
file_name = "Aulacoseira_granulata.csv"
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- paste( "species", 1:n_row)
r_n <- file_csv[,1]
df1 <- data.frame(file_csv[,2:n_col],
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
g
# 2015
path <- "C:/Users/valen/OneDrive/Desktop/Umweltmetagenomics/"
setwd(path)
file_name <- "seqtab_nonchim_id_2015.csv"
csv_table <- read.csv(file=paste(path, file_name, sep = ""), header=TRUE, row.names = 1, sep = ";")
#choosing only Order
data_order <- csv_table %>% group_by(Order) %>%
summarise(across(where(is.numeric), sum))
library(dplyr)
library(reshape2)
library(ggplot2)
library(viridis)
#choosing only Order
data_order <- csv_table %>% group_by(Order) %>%
summarise(across(where(is.numeric), sum))
View(data_order)
data_order <- na.omit(data_order)
for (i in 2:(ncol(data_order))) {
data_order[,i] <- data_order[,i]/sum(data_order[,i])
}
#finding the most abundant
colnames <- data_order$Order
sums <- data.frame(t(rowSums(data_order[,-c(1)])))
most_abundant <- order(t(sums),  decreasing = TRUE)[1:9]
most_abundant
stripped_data_order <- data_order[data_order$Order %in% colnames[most_abundant],]
new_row <- c("Other")
for (i in 2:(ncol(data_order))) {
new_row <- append(new_row, 1 - sum(stripped_data_order[,i]))
}
data_order <- na.omit(data_order)
#choosing only Order
data_order <- csv_table %>% group_by(Order) %>%
summarise(across(where(is.numeric), sum))
View(data_order)
data_order <- na.omit(data_order)
for (i in 2:(ncol(data_order))) {
data_order[,i] <- data_order[,i]/sum(data_order[,i])
}
View(data_order)
#insert here the path to the results folder
# ex. path = "C:/.../results"
path <- "C:/metabarcoding/results/"
results_dir <- "poland_seqtab_ASV"
path_result <- paste(path, results_dir, "/", sep = "")
setwd(path_result)
path_plots <- paste(path, "plots/", results_dir,"/", sep = "")
dir.create(path_plots)
file_list <- list.files()
ggplot_list <- list()
i = 1
for (file_name in file_list){
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- paste( "species", 1:n_row)
r_n <- file_csv[,1]
df1 <- data.frame(file_csv[,2:n_col],
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
ggplot_list[[i]] = g
i <- i +1
name_file <- paste(path_plots, tools::file_path_sans_ext(file_name), ".png", sep = "")
ggsave(name_file, width = 8, height = 4.5, dpi=500)
#for points <- geom_point(aes(color=row_names))
}
normalizing <- function(database){
for (i in 2:(ncol(database))) {
database[,i] <- database[,i]/sum(database[,i])
}
return (database)
}
# PLOTTING JUST ONE SPECIES ####
#insert here the file with the species you are interested in, example:
# file_name = "Aulacoseira_granulata.csv"
file_name = "Aulacoseira_granulata.csv"
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- file_csv[,1]
View(file_csv)
normalized_table <- normalizing(file_csv)
View(csv_table)
View(data_order)
View(csv_table)
View(data_order)
View(csv_table)
df1 <- data.frame(file_csv[,2:n_col],
"row_names" = r_n)
View(df1)
normalized_table <- normalizing(file_csv[,2:n_col])
View(normalized_table)
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
g
View(normalized_table)
normalizing <- function(database){
for (i in 1:(ncol(database))) {
database[,i] <- database[,i]/sum(database[,i])
}
return (database)
}
normalized_table <- normalizing(file_csv[,2:n_col])
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
g
View(df1)
View(file_csv)
file_csv[,2:n_col]
temp <- file_csv[,2:n_col]
View(temp)
normalizing_by_row <- function(database){
for (i in 1:(nrow(database))) {
database[i,] <- database[1,]/sum(database[i,])
}
return (database)
}
normalized_table <- normalizing(file_csv[,2:n_col])
View(normalized_table)
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
g
View(normalized_table)
normalized_table <- normalizing_by_row(file_csv[,2:n_col])
View(normalized_table)
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
g
View(temp)
normalizing_by_row <- function(database){
for (i in 1:(nrow(database))) {
database[i,] <- database[i,]/sum(database[i,])
}
return (database)
}
normalizing_by_row <- function(database){
for (i in 1:(nrow(database))) {
database[i,] <- database[i,]/sum(database[i,])
}
return (database)
}
normalized_table <- normalizing_by_row(file_csv[,2:n_col])
View(normalized_table)
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
g
normalized_table <- t(apply(csv_table[,2:n_col], 1, function(x)(x-min(x))/(max(x)-min(x))))
normalized_table <- t(apply(file_csv[,2:n_col], 1, function(x)(x-min(x))/(max(x)-min(x))))
View(normalized_table)
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
g
results_dir <- "poland_seqtab_ASV"
path_result <- paste(path, results_dir,"_normalized/", sep = "")
setwd(path_result)
path_plots <- paste(path, "plots/", results_dir,"_normalized/", sep = "")
dir.create(path_plots)
file_list <- list.files()
ggplot_list <- list()
i = 1
for (file_name in file_list){
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- file_csv[,1]
temp <- file_csv[,2:n_col]
normalized_table <- t(apply(file_csv[,2:n_col], 1, function(x)(x-min(x))/(max(x)-min(x))))
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
ggplot_list[[i]] = g
i <- i +1
name_file <- paste(path_plots, tools::file_path_sans_ext(file_name), ".png", sep = "")
ggsave(name_file, width = 8, height = 4.5, dpi=500)
#for points <- geom_point(aes(color=row_names))
}
path_result <- paste(path, results_dir,"/", sep = "")
setwd(path_result)
path_plots <- paste(path, "plots/", results_dir,"_normalized/", sep = "")
dir.create(path_plots)
file_list <- list.files()
ggplot_list <- list()
i = 1
for (file_name in file_list){
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- file_csv[,1]
temp <- file_csv[,2:n_col]
normalized_table <- t(apply(file_csv[,2:n_col], 1, function(x)(x-min(x))/(max(x)-min(x))))
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
ggplot_list[[i]] = g
i <- i +1
name_file <- paste(path_plots, tools::file_path_sans_ext(file_name), ".png", sep = "")
ggsave(name_file, width = 8, height = 4.5, dpi=500)
#for points <- geom_point(aes(color=row_names))
}
path_plots <- paste(path, "plots/", results_dir,"_normalized/", sep = "")
dir.create(path_plots)
file_list <- list.files()
ggplot_list <- list()
i = 1
for (file_name in file_list){
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- file_csv[,1]
temp <- file_csv[,2:n_col]
normalized_table <- t(apply(file_csv[,2:n_col], 1, function(x)(x-min(x))/(max(x)-min(x))))
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
ggplot_list[[i]] = g
i <- i +1
name_file <- paste(path_plots, tools::file_path_sans_ext(file_name), ".png", sep = "")
ggsave(name_file, width = 8, height = 4.5, dpi=500)
printing <- paste("saving plot for ", tools::file_path_sans_ext(file_name), sep = "")
#for points <- geom_point(aes(color=row_names))
}
i = 1
for (file_name in file_list){
file_csv <- read.csv(file=paste(path_result, file_name, sep = ""), header=TRUE, row.names = 1)
n_col = ncol(file_csv)-9
n_row = nrow(file_csv)
r_n <- file_csv[,1]
temp <- file_csv[,2:n_col]
normalized_table <- t(apply(file_csv[,2:n_col], 1, function(x)(x-min(x))/(max(x)-min(x))))
df1 <- data.frame(normalized_table,
"row_names" = r_n)
df2 <- melt(df1,"row_names")
g <- ggplot(data=df2, aes(x=variable, y=value, group=row_names)) +
geom_line(aes(color=row_names))+ ylab("# reads") +
xlab("samples")+ theme(legend.title = element_blank(), axis.text.x = element_blank()) + ggtitle(tools::file_path_sans_ext(file_name))
ggplot_list[[i]] = g
i <- i +1
name_file <- paste(path_plots, tools::file_path_sans_ext(file_name), ".png", sep = "")
ggsave(name_file, width = 8, height = 4.5, dpi=500)
printing <- paste("saving plot for ", tools::file_path_sans_ext(file_name), sep = "")
print(printing)
#for points <- geom_point(aes(color=row_names))
}
